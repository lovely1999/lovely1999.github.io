{"meta":{"title":"朽月","subtitle":null,"description":null,"author":"John Doe","url":"http://wanquanxiaobai.com","root":"/"},"pages":[{"title":"404 Not Found","date":"2019-04-14T12:03:36.226Z","updated":"2019-04-14T12:03:36.226Z","comments":true,"path":"404.html","permalink":"http://wanquanxiaobai.com/404.html","excerpt":"","text":"404 Not Found 很抱歉，您访问的页面不存在可能是输入地址有误或该地址已被删除"},{"title":"所有分类","date":"2019-04-14T12:00:49.024Z","updated":"2019-04-14T12:00:49.024Z","comments":true,"path":"categories/index.html","permalink":"http://wanquanxiaobai.com/categories/index.html","excerpt":"","text":""},{"title":"","date":"2019-04-14T12:01:57.122Z","updated":"2019-04-14T12:01:57.122Z","comments":true,"path":"mylist/index.html","permalink":"http://wanquanxiaobai.com/mylist/index.html","excerpt":"","text":""},{"title":"所有标签","date":"2019-04-14T12:00:47.481Z","updated":"2019-04-14T12:00:47.481Z","comments":true,"path":"tags/index.html","permalink":"http://wanquanxiaobai.com/tags/index.html","excerpt":"","text":""},{"title":"我的朋友们","date":"2019-04-14T12:02:58.881Z","updated":"2019-04-14T12:02:58.881Z","comments":true,"path":"friends/index.html","permalink":"http://wanquanxiaobai.com/friends/index.html","excerpt":"","text":""}],"posts":[{"title":"pag03","slug":"pag03","date":"2019-05-14T11:30:28.000Z","updated":"2019-05-14T11:38:40.447Z","comments":true,"path":"2019/05/14/pag03/","link":"","permalink":"http://wanquanxiaobai.com/2019/05/14/pag03/","excerpt":"","text":"测试","categories":[],"tags":[]},{"title":"Markdown基本语法","slug":"pag02","date":"2019-05-07T12:22:45.000Z","updated":"2019-05-08T04:37:12.561Z","comments":true,"path":"2019/05/07/pag02/","link":"","permalink":"http://wanquanxiaobai.com/2019/05/07/pag02/","excerpt":"最近在上传博客时，发现自己并没有掌握Markdown的语法。随即我就找了一篇在百度上搜索到的简书上的大佬写的关于Markdown基础语法的文章，就搬了过来，在文末写下了作者的原地址，感兴趣的可以去点进去看看！！","text":"最近在上传博客时，发现自己并没有掌握Markdown的语法。随即我就找了一篇在百度上搜索到的简书上的大佬写的关于Markdown基础语法的文章，就搬了过来，在文末写下了作者的原地址，感兴趣的可以去点进去看看！！ 一、标题想要设置的标题文字前加#来表示 #越多，标题越小，最多支持6级标题注：#后必须加空格，否则不会识别 示例：123456# 一级标题## 二级标题### 三级标题#### 四级标题##### 五级标题####### 六级标题 显示效果：一级标题二级标题三级标题四级标题五级标题六级标题 二、字体加粗要加粗的话就在文字的两端用两个包起来斜体要倾斜的文字两端分别用一个包起来删除线要加删除线的文字两端分别用两个~~包起来 示例：1234**加粗***倾斜****加粗并倾斜***~~加删除线的文字~~ 显示效果：加粗倾斜加粗并倾斜加删除线的文字 三、引用在引用的文字前加&gt;即可。引用也可以嵌套，比如两个&gt;&gt;,三个&gt;&gt;&gt;,…,n个 示例：123&gt;这是引用的内容&gt;&gt;这是引用的内容&gt;&gt;&gt;&gt;&gt;&gt;这是引用的内容 显示效果： 这是引用的内容 这是引用的内容 这是引用的内容 四、分割线三个或以上的-或*都可以 示例：1234-------******* 显示效果： 可以明显的看到显示的结果是一样的，至于你想加几个上去，也没人管你（但可能看起来有点，嗯…） 五、图片语法：123![图片alt](图片地址 &quot;图片title&quot;)图片alt是显示在图片下方的文字图片title是鼠标滑过图片显示的内容 示例：1![白马](https://image.baidu.com/search/detail?ct=503316480&amp;z=0&amp;ipn=d&amp;word=tupian&amp;step_word=&amp;hs=0&amp;pn=8&amp;spn=0&amp;di=68970&amp;pi=0&amp;rn=1&amp;tn=baiduimagedetail&amp;is=0%2C0&amp;istype=0&amp;ie=utf-8&amp;oe=utf-8&amp;in=&amp;cl=2&amp;lm=-1&amp;st=undefined&amp;cs=1756633021%2C617129201&amp;os=1496067099%2C45940710&amp;simid=3341372613%2C415370754&amp;adpicid=0&amp;lpn=0&amp;ln=1715&amp;fr=&amp;fmq=1557233946177_R&amp;fm=&amp;ic=undefined&amp;s=undefined&amp;hd=undefined&amp;latest=undefined&amp;copyright=undefined&amp;se=&amp;sme=&amp;tab=0&amp;width=undefined&amp;height=undefined&amp;face=undefined&amp;ist=&amp;jit=&amp;cg=&amp;bdtype=0&amp;oriquery=&amp;objurl=http%3A%2F%2Fphotocdn.sohu.com%2F20120128%2FImg333056814.jpg&amp;fromurl=ippr_z2C%24qAzdH3FAzdH3F65ss_z%26e3Bf5i7_z%26e3Bv54AzdH3Fda8da8dbAzdH3Fgnnnacmb8a_z%26e3Bfip4s&amp;gsm=0&amp;rpstart=0&amp;rpnum=0&amp;islist=&amp;querylist=&amp;force=undefined &quot;白马，彩虹&quot;) 显示效果： 上传本地的图片直接点击导航栏的图片标志，选择图片即可 六、超链接语法：12[超链接名](超链接地址 &quot;超链接title&quot;)title可加可不加 示例：1[百度](www.baidu.com) 效果如下：百度注：Markdown本身语法不支持链接在新标签页中打开。 七、列表无序列表 语法：无序列表用-+*任何一种都可以123456- 列表内容 - 列表内容 + 列表内容 * 列表内容+ 列表内容* 列表内容 效果如下： 列表内容 列表内容 列表内容 列表内容 列表内容 列表内容有序列表语法：数字加点示例1231. 第一2. 第二3. 第三 显示效果 第一 第二 第三列表嵌套上一级和下一级之间加三个空格即可 八、表格语法：1234567891011表头|表头|表头---|:--:|:--:内容|内容|内容内容|内容|内容第二行分割表头和内容-有一个就行，此处有两个是为了对齐（强迫症嘛）文字默认左对齐-两边加:表示文字居中-右边加:表示文字右对齐注：原生的语法两边都要用 | 包起来。此处省略 示例：12345英雄|职业|价格---|:--:|---:刘备|战士|13888关羽|战士|18888张飞|坦克|13888 显示效果： 英雄 职业 价格 刘备 战士 13888 关羽 战士 18888 张飞 坦克 13888 九、代码（说了那么多，最重要的还不是这个嘛） 语法：单行代码，用反引号（就是tab键上的那个）包起来 1`代码` 代码块，用三个反引号包起来，并且三个反引号都要占一行 1234(```) 代码、、、 代码、、、(```) 注：此处加括号是为了演示，实际中加括号是不可行的 示例：单行代码：1`System.out.println(&quot;HelloWorld！&quot;);` 代码块：12345(```)for(int i=1;i&lt;3;i++&gt;)&#123; System.out.println(&quot;显示结果&quot;);&#125;(```) 显示效果：System.out.println(&quot;HelloWorld！&quot;);123for(int i=1;i&lt;3;i++&gt;)&#123; System.out.println(&quot;显示结果&quot;);&#125; 大体上就是这些，用十分钟，学习一种可以用一辈纸的技能，嗯，我很满意 我没有错别字哦！233原文地址:","categories":[{"name":"Markdown","slug":"Markdown","permalink":"http://wanquanxiaobai.com/categories/Markdown/"}],"tags":[{"name":"MarkDown","slug":"MarkDown","permalink":"http://wanquanxiaobai.com/tags/MarkDown/"},{"name":"学习笔记","slug":"学习笔记","permalink":"http://wanquanxiaobai.com/tags/学习笔记/"}]},{"title":"vscode常用快捷键","slug":"pag00","date":"2019-05-06T13:48:11.000Z","updated":"2019-05-08T04:33:51.697Z","comments":true,"path":"2019/05/06/pag00/","link":"","permalink":"http://wanquanxiaobai.com/2019/05/06/pag00/","excerpt":"VS Code 的常用快捷键和插件","text":"VS Code 的常用快捷键和插件 vs code 的常用快捷键1、注释： a) 单行注释：[ctrl+k,ctrl+c] 或 ctrl+/ b) 取消单行注释：[ctrl+k,ctrl+u] (按下ctrl不放，再按k + u) c) 多行注释：[alt+shift+A] d) 多行注释：/** 2、移动行：alt+up/down 3、显示/隐藏左侧目录栏 ctrl + b 4、复制当前行：shift + alt +up/down 5、删除当前行：shift + ctrl + k 6、控制台终端显示与隐藏：ctrl + ~ 7、查找文件/安装vs code 插件地址：ctrl + p 8、代码格式化：shift + alt +f 9、新建一个窗口 : ctrl + shift + n 10、行增加缩进: ctrl + [ 11、行减少缩进: ctrl + ] 12、裁剪尾随空格(去掉一行的末尾那些没用的空格) : ctrl + shift + x 13、字体放大/缩小: ctrl + ( + 或 - ) 14、拆分编辑器 : ctrl + 1/2/3 15、切换窗口 : ctrl + shift + left/right 16、关闭编辑器窗口 : ctrl + w 17、关闭所有窗口 : ctrl + k + w 18、切换全屏 : F11 19、自动换行 : alt + z 20、显示git : ctrl + shift + g 21、全局查找文件：ctrl + shift + f 22、显示相关插件的命令(如：git log)：ctrl + shift + p 23、选中文字：shift + left / right / up / down 24、折叠代码： ctrl + k + 0-9 (0是完全折叠) 25、展开代码： ctrl + k + j (完全展开代码) 26、删除行 ： ctrl + shift + k 27、快速切换主题：ctrl + k / ctrl + t 28、快速回到顶部 ： ctrl + home 29、快速回到底部 : ctrl + end 30、格式化选定代码 ：ctrl + k / ctrl +f 31、选中代码 ： shift + 鼠标左键 32、多行同时添加内容（光标） ：ctrl + alt + up/down 33、全局替换：ctrl + shift + h 34、当前文件替换：ctrl + h 35、打开最近打开的文件：ctrl + r 36、打开新的命令窗：ctrl + shift + c vs code 的常用插件1、Auto Rename Tag 修改html标签，自动帮你完成尾部闭合标签的同步修改，和webstorm一样。 2、Auto Close Tag 自动闭合HTML标签 4、Beautiful 格式化代码的工具 5、Dash Dash是MacOS的API文档浏览器和代码段管理器 6、Ejs Snippets ejs 代码提示 7、ESLint 检查javascript语法错误与提示 8、File Navigator 快速查找文件 9、Git History(git log) 查看git log 10、Gulp Snippets 写gulp时用到，gulp语法提示。 11、HTML CSS Support 在HTML标签上写class智能提示当前项目所支持的样式 12、HTML Snippets 超级好用且初级的H5代码片段以及提示 13、Debug for Chrome 让vs code映射chrome的debug功能，静态页面都可以用vscode来打断点调试、配饰稍微复杂一点 14、Document this Js的注释模板 15、jQuery Code Snippets jquery提示工具 16、Html2jade html模板转pug模板 17、JS-CSS-HTML Formatter 格式化 18、Npm intellisense require 时的包提示工具 19、Open in browser 打开默认浏览器 20、One Dark Theme 一个vs code的主题 21、Path Intellisense 自动路径补全、默认不带这个功能 22、Project Manager 多个项目之间快速切换的工具 23、Pug(Jade) snippets pug语法提示 24、React Components 根据文件名创建反应组件代码。 25、React Native Tools reactNative工具类为React Native项目提供了开发环境。 26、Stylelint css/sass代码审查 27、Typings auto installer 安装vscode 的代码提示依赖库，基于typtings的 28、View In Browser 默认浏览器查看HTML文件（快捷键Ctrl+F1可以修改） 29、Vscode-icons 让vscode资源目录加上图标、必备 30、VueHelper Vue2代码段（包括Vue2 api、vue-router2、vuex2） 31、Vue 2 Snippets vue必备vue代码提示 32、Vue-color vue语法高亮主题 33、Auto-Open Markdown Preview markdown文件自动开启预览 34、EverMonkey 印象笔记 35、atom one dark atom的一个高亮主题(个人推荐) 常用的电脑快捷键1、ctrl + shift + delete 快速清除浏览器缓存 2、ctrl + alt + delete 快速进入任务管理器页面 3、window + L 快速锁定电脑 4、window + d 所有窗口最小化 5、 window + e 打开我的资源管理器(我的电脑) 6、 window + f 快速打开搜索窗口 7、 alt + tab 快速查看打开的应用与窗口 参考文章：风行天下一万号","categories":[{"name":"快捷键","slug":"快捷键","permalink":"http://wanquanxiaobai.com/categories/快捷键/"}],"tags":[{"name":"快捷键","slug":"快捷键","permalink":"http://wanquanxiaobai.com/tags/快捷键/"}]},{"title":"爬虫学习笔记--03","slug":"Python03","date":"2019-05-05T04:23:46.000Z","updated":"2019-05-14T11:38:44.302Z","comments":true,"path":"2019/05/05/Python03/","link":"","permalink":"http://wanquanxiaobai.com/2019/05/05/Python03/","excerpt":"想在网页上找到一些有用的信息该怎么办呢？承接上文，一起来看看吧！！！![]","text":"想在网页上找到一些有用的信息该怎么办呢？承接上文，一起来看看吧！！！![] Python爬虫网页下载器 网页下载器：将互联网上URL对应的网页下载到本地的工具 Python有几种网页下载器 urllib2（Python官方基础模块） requests(第三方插件) urllib2下载网页的方法 最简洁的方法 12345678910import urllib2#直接请求response = urllib2.urlopen(&apos;http://www.baidu.com&apos;)#获取状态码，返回200即表示成功print response.getcode()#读取内容cont = response.read() 添加data、http header 123456789101112import urllib2#创建Request对象request = urllib2.Request(url)#添加数据request.add_data(&apos;a&apos;,&apos;1&apos;)#添加http的headerrequest.add_header(&apos;User-Agent&apos;,&apos;Mozilla/5.0&apos;)#发送请求获取结果response = urllib2.urlopen(request) 添加特殊情景处理器 12345678910111213import urllib2,cookielib# 创建cookie容器cj = cookielib.CookjeJar()#创建1个openeropener = urllib2.bulid_opener(urllib2.HTTPCookieProcessor(cj))#给urllib安装openerurllib2.install_opener(opener)#使用带有cookie的urllib访问网页response = urllib2.urlopen(&quot;http://www.baidu.com/&quot;)","categories":[{"name":"爬虫","slug":"爬虫","permalink":"http://wanquanxiaobai.com/categories/爬虫/"}],"tags":[{"name":"Python","slug":"Python","permalink":"http://wanquanxiaobai.com/tags/Python/"}]},{"title":"爬虫学习笔记--02","slug":"Python02","date":"2019-05-02T04:11:46.000Z","updated":"2019-05-05T04:22:37.354Z","comments":true,"path":"2019/05/02/Python02/","link":"","permalink":"http://wanquanxiaobai.com/2019/05/02/Python02/","excerpt":"想在网页上找到一些有用的信息该怎么办呢？承接上文，一起来看看吧！！！","text":"想在网页上找到一些有用的信息该怎么办呢？承接上文，一起来看看吧！！！ URL管理器 概念：管理待抓取URL集合和已抓取URL集合 作用： 防止重复抓取、防止循环抓取 需要包含的功能 添加新的URL到待爬取的集合中 判断待添加的URL是否在容器中 判断是否还有待爬取的URL 获取待爬取的URL 将URL从待爬取移动到已爬取 实现方式 将URL存放到内存中 在python中可以将待爬取和已爬取的URL集合放置于 set() 中python中set()可以直接去除集合中重复的元素 将URL存储于关系型数据库中 如果在MySQL中即可建立一表，其结构如下urls(url,is_crawled)is_crawled字段来标志此URL是否已被爬取 可以将URL存储于缓冲数据库中 如readis，它支持set数据结构可以将以将待爬取和已爬取的URL集合放置于 set 中优点：高性能","categories":[{"name":"爬虫","slug":"爬虫","permalink":"http://wanquanxiaobai.com/categories/爬虫/"}],"tags":[{"name":"Python","slug":"Python","permalink":"http://wanquanxiaobai.com/tags/Python/"}]},{"title":"爬虫学习笔记--01","slug":"Python01","date":"2019-05-01T14:26:38.000Z","updated":"2019-05-05T03:05:22.785Z","comments":true,"path":"2019/05/01/Python01/","link":"","permalink":"http://wanquanxiaobai.com/2019/05/01/Python01/","excerpt":"想在网页上找到一些有用的信息该怎么办呢？","text":"想在网页上找到一些有用的信息该怎么办呢？ 爬虫准备工作 参考资料 Python网络数据采集 · 图灵工业出版 精通Python爬虫框架Scrapy · 人民邮电出版社 前提知识 URL http协议 web前端 · HTML、css、js ajax re、xpath xml 爬虫简介 爬虫定义： 网络爬虫，即Web Spider，是一个很形象的名字。 把互联网比喻成一个蜘蛛网，那么Spider就是在网上爬来爬去的蜘蛛。 网络蜘蛛是通过网页的链接地址来寻找网页的。 从网站某一个页面（通常是首页）开始，读取网页的内容，找到在网页中的其它链接地址， 然后通过这些链接地址寻找下一个网页，这样一直循环下去，直到把这个网站所有的网页都抓取完为止。 如果把整个互联网当成一个请叫我汪海网站，那么网络蜘蛛就可以用这个原理把互联网上所有的网页都抓取下来。 这样看来，网络爬虫就是一个爬行程序，一个抓取网页的程序。 两大特征 能按照作者的要求下载数据或内容 能自动在网络上去流窜 三大步骤： 下载信息（网页） 提取正确的信息 根据一定的规则自动跳转到另外的网页上执行上两步的内容 爬虫的分类： 通用爬虫 专用爬虫（聚焦爬虫） Python网络包简介 Python2.x：urllib /urllib2 / urllib3 / httplib / httplib2 / requests Python3.x：urllib /urllib2 / urllib3 / requests 爬虫的价值 互联网数据为我所用！！","categories":[{"name":"爬虫","slug":"爬虫","permalink":"http://wanquanxiaobai.com/categories/爬虫/"}],"tags":[{"name":"Python","slug":"Python","permalink":"http://wanquanxiaobai.com/tags/Python/"}]},{"title":"关于本站的起因","slug":"pag01","date":"2019-05-01T08:34:55.000Z","updated":"2019-05-01T08:52:31.147Z","comments":true,"path":"2019/05/01/pag01/","link":"","permalink":"http://wanquanxiaobai.com/2019/05/01/pag01/","excerpt":"每件事总有它的起因和结果","text":"每件事总有它的起因和结果 关于博客的前因后果在学习了编程2年后的一天，突然想到为什么我不自己记录一下自己的学习经历呢？这样一方面可以让自己学习更有动力；另一方面，也可以让自己的疑问和得到的答案有地方记录，方便自己以后查看。所以我在网上到处找关于记录编程笔记之类的方法。最后选择了使用个人博客这一方式来记录我的学习。 以此共勉在找不着方向的时候，不要放弃。生活总是光明，人生总是精彩。不必为了一次小的挫折就垂头丧气，也不必为了一次小的成功就沾沾自喜。","categories":[{"name":"随笔","slug":"随笔","permalink":"http://wanquanxiaobai.com/categories/随笔/"}],"tags":[]},{"title":"Hello World","slug":"hello-world","date":"2019-03-17T00:56:15.630Z","updated":"2019-05-01T05:56:53.317Z","comments":true,"path":"2019/03/17/hello-world/","link":"","permalink":"http://wanquanxiaobai.com/2019/03/17/hello-world/","excerpt":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub.","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new \"My New Post\" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","categories":[],"tags":[]}]}